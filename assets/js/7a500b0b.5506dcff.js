"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[654],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function d(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var p=n.createContext({}),o=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=o(e.components);return n.createElement(p.Provider,{value:t},e.children)},s="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),s=o(a),m=i,k=s["".concat(p,".").concat(m)]||s[m]||b[m]||l;return a?n.createElement(k,r(r({ref:t},u),{},{components:a})):n.createElement(k,r({ref:t},u))}));function k(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=m;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d[s]="string"==typeof e?e:i,r[1]=d;for(var o=2;o<l;o++)r[o]=a[o];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},4032:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294);function i(){return n.createElement("div",{style:{opacity:.7,backgroundColor:"rgb(175, 175, 175)",height:"3px",width:"100%",margin:"75px 0px"}})}},6835:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>m,frontMatter:()=>r,metadata:()=>p,toc:()=>u});var n=a(7462),i=(a(7294),a(3905)),l=a(4032);const r={},d="build",p={unversionedId:"api/build",id:"api/build",title:"build",description:"these routes relate to interacting with monitor builds",source:"@site/docs/api/build.mdx",sourceDirName:"api",slug:"/api/build",permalink:"/monitor/api/build",draft:!1,editUrl:"https://github.com/mbecker20/monitor/tree/main/docsite/docs/api/build.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"api secrets",permalink:"/monitor/api/api-secrets"},next:{title:"deployment",permalink:"/monitor/api/deployment"}},o={},u=[{value:"list builds",id:"list-builds",level:2},{value:"response body",id:"response-body",level:3},{value:"get build",id:"get-build",level:2},{value:"response body",id:"response-body-1",level:3},{value:"get build action state",id:"get-build-action-state",level:2},{value:"response body",id:"response-body-2",level:3},{value:"get build versions",id:"get-build-versions",level:2},{value:"query params",id:"query-params",level:3},{value:"response body",id:"response-body-3",level:3},{value:"create build",id:"create-build",level:2},{value:"request body",id:"request-body",level:3},{value:"response body",id:"response-body-4",level:3},{value:"create full build",id:"create-full-build",level:2},{value:"request body",id:"request-body-1",level:3},{value:"response body",id:"response-body-5",level:3},{value:"copy build",id:"copy-build",level:2},{value:"request body",id:"request-body-2",level:3},{value:"response body",id:"response-body-6",level:3},{value:"delete build",id:"delete-build",level:2},{value:"response body",id:"response-body-7",level:3},{value:"update build",id:"update-build",level:2},{value:"request body",id:"request-body-3",level:3},{value:"response body",id:"response-body-8",level:3},{value:"build (action)",id:"build-action",level:2},{value:"response body",id:"response-body-9",level:3},{value:"get aws builder defaults",id:"get-aws-builder-defaults",level:2},{value:"response body",id:"response-body-10",level:3},{value:"get allowed docker organizations",id:"get-allowed-docker-organizations",level:2},{value:"response body",id:"response-body-11",level:3}],s={toc:u},b="wrapper";function m(e){let{components:t,...a}=e;return(0,i.kt)(b,(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"build"},"build"),(0,i.kt)("p",null,"these routes relate to interacting with monitor ",(0,i.kt)("inlineCode",{parentName:"p"},"builds")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"name"),(0,i.kt)("th",{parentName:"tr",align:null},"route"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#list-builds"},"list builds")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"GET /api/build/list"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#get-build"},"get build")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"GET /api/build/<build_id>"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#get-build-action-state"},"get build action state")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"GET /api/build/<build_id>/action_state"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#get-build-versions"},"get build versions")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"GET /api/build/<build_id>/versions"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#create-build"},"create build")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"POST /api/build/create"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#create-full-build"},"create full build")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"POST /api/build/create_full"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#copy-build"},"copy build")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"POST /api/build/<build_id>/copy"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#delete-build"},"delete build")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"DELETE /api/build/<build_id>/delete"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#update-build"},"update build")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"PATCH /api/build/update"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#build-action"},"build")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"POST /api/build/<build_id>/build"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#get-aws-builder-defaults"},"get aws builder defaults")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"GET /api/build/aws_builder_defaults"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/api/build#get-allowed-docker-organizations"},"get allowed docker organizations")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"GET /api/build/docker_organizations"))))),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"list-builds"},"list builds"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /api/build/list")),(0,i.kt)("p",null,"this method will return an array of builds the requesting user has a minimum of ",(0,i.kt)("inlineCode",{parentName:"p"},"Read")," permissions on."),(0,i.kt)("h3",{id:"response-body"},"response body"),(0,i.kt)("p",null,"Array<",(0,i.kt)("a",{parentName:"p",href:"/api/types#build"},"Build"),">"),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"get-build"},"get build"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /api/build/<build_id>")),(0,i.kt)("h3",{id:"response-body-1"},"response body"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/types#build"},"Build")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"get-build-action-state"},"get build action state"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /api/build/<build_id>/action_state")),(0,i.kt)("p",null,"this method returns the action state for the build, eg. whether the build is currently ",(0,i.kt)("inlineCode",{parentName:"p"},"building"),"."),(0,i.kt)("h3",{id:"response-body-2"},"response body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"{\n    building: boolean,\n    updating: boolean,\n}\n")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"get-build-versions"},"get build versions"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /api/build/<build_id>/versions")),(0,i.kt)("p",null,"paginated route for fetching the most recent available versions of this build."),(0,i.kt)("h3",{id:"query-params"},"query params"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"page=number // optional, default is 0. pagination starting at page 0.\nmajor=number // optional. filter by major version number\nminor=number // optional. filter by minor version number\npatch=number // optional. filter by patch version number\n")),(0,i.kt)("h3",{id:"response-body-3"},"response body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"[\n    { \n        ts: rfc3339_timestamp, \n        version: { \n            major: number,\n            minor: number,\n            patch: number,\n        }\n    },\n    ...\n]\n")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"create-build"},"create build"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST /api/build/create")),(0,i.kt)("h3",{id:"request-body"},"request body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"{\n    name: string,\n}\n")),(0,i.kt)("h3",{id:"response-body-4"},"response body"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/types#build"},"Build")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"create-full-build"},"create full build"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST /api/build/create_full")),(0,i.kt)("h3",{id:"request-body-1"},"request body"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/types#build"},"Build")),(0,i.kt)("h3",{id:"response-body-5"},"response body"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/types#build"},"Build")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"copy-build"},"copy build"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST /api/build/<build_id>/copy")),(0,i.kt)("p",null,"this method will create a copy of the build with a new _id and name,\nwith all the same configuration as the target build."),(0,i.kt)("h3",{id:"request-body-2"},"request body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"{\n    name: string, // the new name\n}\n")),(0,i.kt)("h3",{id:"response-body-6"},"response body"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/types#build"},"Build")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"delete-build"},"delete build"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"DELETE /api/build/<build_id>/delete")),(0,i.kt)("h3",{id:"response-body-7"},"response body"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/types#build"},"Build")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"update-build"},"update build"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"PATCH /api/build/update")),(0,i.kt)("h3",{id:"request-body-3"},"request body"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/types#build"},"Build")),(0,i.kt)("h3",{id:"response-body-8"},"response body"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/types#build"},"Build")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"build-action"},"build (action)"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"POST /api/build/<build_id>/build")),(0,i.kt)("h3",{id:"response-body-9"},"response body"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/api/types#update"},"Update")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"this update will include the ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," field.")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"get-aws-builder-defaults"},"get aws builder defaults"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /api/build/aws_builder_defaults")),(0,i.kt)("h3",{id:"response-body-10"},"response body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"{\n    default_ami_name: string,\n    default_subnet_id: string,\n    default_key_pair_name: string,\n    default_region: string,\n    default_volume_gb: number,\n    default_instance_type: string,\n    default_security_group_ids: string[],\n    default_assign_public_ip: boolean,\n    available_ami_accounts: [\n        {\n            ami_id: string,\n            github: string[],\n            docker: string[],\n            secrets: string[],\n        }\n    ],\n}\n")),(0,i.kt)(l.Z,{mdxType:"Divider"}),(0,i.kt)("h2",{id:"get-allowed-docker-organizations"},"get allowed docker organizations"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"GET /api/build/docker_organizations")),(0,i.kt)("h3",{id:"response-body-11"},"response body"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"string[] // the names of the allowed docker organizations\n")))}m.isMDXComponent=!0}}]);