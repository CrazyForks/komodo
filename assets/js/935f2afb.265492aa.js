"use strict";(self.webpackChunkdocsite=self.webpackChunkdocsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"what is monitor?","href":"/monitor/intro","docId":"intro"},{"type":"category","label":"connecting servers","items":[{"type":"link","label":"setup monitor periphery","href":"/monitor/connecting-servers/setup-periphery","docId":"connecting-servers/setup-periphery"},{"type":"link","label":"adding the server to monitor","href":"/monitor/connecting-servers/add-server","docId":"connecting-servers/add-server"}],"collapsed":true,"collapsible":true,"href":"/monitor/connecting-servers"},{"type":"category","label":"build images","items":[{"type":"link","label":"configuration","href":"/monitor/build-images/configuration","docId":"build-images/configuration"},{"type":"link","label":"pre build command","href":"/monitor/build-images/pre-build","docId":"build-images/pre-build"},{"type":"link","label":"select a builder","href":"/monitor/build-images/choosing-builder","docId":"build-images/choosing-builder"},{"type":"link","label":"versioning","href":"/monitor/build-images/versioning","docId":"build-images/versioning"}],"collapsed":true,"collapsible":true,"href":"/monitor/build-images"},{"type":"category","label":"deploy containers","items":[{"type":"link","label":"configuration","href":"/monitor/deploy-containers/configuration","docId":"deploy-containers/configuration"},{"type":"link","label":"container management","href":"/monitor/deploy-containers/lifetime-management","docId":"deploy-containers/lifetime-management"}],"collapsed":true,"collapsible":true,"href":"/monitor/deploy-containers/"},{"type":"link","label":"permissioning resources","href":"/monitor/permissioning","docId":"permissioning"},{"type":"link","label":"file paths","href":"/monitor/file-paths","docId":"file-paths"},{"type":"category","label":"API","items":[{"type":"link","label":"types","href":"/monitor/api/types","docId":"api/types"},{"type":"link","label":"authenticating requests","href":"/monitor/api/authenticating-requests","docId":"api/authenticating-requests"},{"type":"link","label":"login","href":"/monitor/api/login","docId":"api/login"},{"type":"link","label":"api secrets","href":"/monitor/api/api-secrets","docId":"api/api-secrets"},{"type":"link","label":"build","href":"/monitor/api/build","docId":"api/build"},{"type":"link","label":"deployment","href":"/monitor/api/deployment","docId":"api/deployment"},{"type":"link","label":"server","href":"/monitor/api/server","docId":"api/server"},{"type":"link","label":"permissions","href":"/monitor/api/permissions","docId":"api/permissions"},{"type":"link","label":"websocket","href":"/monitor/api/websocket","docId":"api/websocket"}],"collapsed":true,"collapsible":true,"href":"/monitor/api"}]},"docs":{"api/api-secrets":{"id":"api/api-secrets","title":"api secrets","description":"these routes are used to manage api secrets.","sidebar":"docs"},"api/authenticating-requests":{"id":"api/authenticating-requests","title":"authenticating requests","description":"monitor uses the JSON Web Token (JWT) standard to authenticate all requests to subroutes under /api.","sidebar":"docs"},"api/build":{"id":"api/build","title":"build","description":"these routes relate to interacting with monitor builds","sidebar":"docs"},"api/deployment":{"id":"api/deployment","title":"deployment","description":"these routes relate to interacting with monitor deployments","sidebar":"docs"},"api/index":{"id":"api/index","title":"index","description":"this section documents the rest and websocket api","sidebar":"docs"},"api/login":{"id":"api/login","title":"login","description":"monitor supports local login (username and password), Oauth2 login (github and google),","sidebar":"docs"},"api/permissions":{"id":"api/permissions","title":"permissions","description":"these routes relate to updating user permissions","sidebar":"docs"},"api/procedure":{"id":"api/procedure","title":"procedure","description":"these routes relate to interacting with monitor procedures"},"api/server":{"id":"api/server","title":"server","description":"these routes relate to interacting with monitor servers","sidebar":"docs"},"api/types":{"id":"api/types","title":"types","description":"these types are used across the monitor api, defined using typescript. they are referenced throughout the api docs.","sidebar":"docs"},"api/websocket":{"id":"api/websocket","title":"websocket","description":"","sidebar":"docs"},"build-images/choosing-builder":{"id":"build-images/choosing-builder","title":"select a builder","description":"A builder is a machine running monitor periphery and docker. Any server connected to monitor can be chosen as the builder for a build.","sidebar":"docs"},"build-images/configuration":{"id":"build-images/configuration","title":"configuration","description":"monitor just needs a bit of information in order to build your image.","sidebar":"docs"},"build-images/index":{"id":"build-images/index","title":"building images","description":"Monitor builds docker images by cloning the source repository from Github, running `docker build`, and pushing the resulting image to docker hub. Any repo containing a `Dockerfile` is buildable using this method.","sidebar":"docs"},"build-images/pre-build":{"id":"build-images/pre-build","title":"pre build command","description":"Sometimes a command needs to be run before running `docker build`, you can configure this in the pre build section.","sidebar":"docs"},"build-images/versioning":{"id":"build-images/versioning","title":"versioning","description":"Monitor uses a major.minor.patch versioning scheme. Every build will auto increment the patch number, and push the image to docker hub with the version tag as well as the `latest` tag.","sidebar":"docs"},"connecting-servers/add-server":{"id":"connecting-servers/add-server","title":"adding the server to monitor","description":"The easiest way to add the server is with the GUI. On the home page, click the `+` button to the right of the server search bar, configure the name and address of the server. The address is the full http/s url to the periphery server, eg `http8000`.","sidebar":"docs"},"connecting-servers/index":{"id":"connecting-servers/index","title":"connecting servers","description":"Integrating a device into the monitor system has 2 steps:","sidebar":"docs"},"connecting-servers/setup-periphery":{"id":"connecting-servers/setup-periphery","title":"setup monitor periphery","description":"The easiest way to do this is to follow the monitor guide. This is a repo containing directions and scripts enabling command line installation via ssh or remotely.","sidebar":"docs"},"core-setup/authentication":{"id":"core-setup/authentication","title":"authentication","description":""},"core-setup/index":{"id":"core-setup/index","title":"index","description":""},"deploy-containers/configuration":{"id":"deploy-containers/configuration","title":"configuration","description":"choose the docker image","sidebar":"docs"},"deploy-containers/index":{"id":"deploy-containers/index","title":"deploy containers","description":"Monitor can deploy any docker images that it can access with the configured docker accounts. It works by parsing the deployment configuration into a `docker run` command, which is then run on the target system. The configuration is stored on MongoDB, and records of all actions (update config, deploy, stop, etc.) are stored as well.","sidebar":"docs"},"deploy-containers/lifetime-management":{"id":"deploy-containers/lifetime-management","title":"container management","description":"the lifetime of a docker container is more like a virtual machine. They can be created, started, stopped, and destroyed. monitor will display the state of the container and provides an API to manage all your container\'s lifetimes.","sidebar":"docs"},"file-paths":{"id":"file-paths","title":"file paths","description":"when working with monitor, you might have to configure file or directory paths.","sidebar":"docs"},"intro":{"id":"intro","title":"what is monitor?","description":"If you have many servers running many applications, it can be a challenge to keep things organized and easily accessible. Without structure, things can become messy quickly, which means operational issues are more likely to arise and they can take longer to resolve. Ultimately these issues hinder productivity and waste valuable time. Monitor is a web app to provide this structure for how applications are built, deployed, and managed across many servers.","sidebar":"docs"},"permissioning":{"id":"permissioning","title":"permissioning resources","description":"All monitor resources (servers, builds, deployment) have independant permission tables to allow for users to have granular access to these resources. By default, users do not see any resources until they are given at least read permissions.","sidebar":"docs"}}}')}}]);